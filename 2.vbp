Private Sub Worksheet_Change(ByVal Target As Range)
    Dim ws As Worksheet
    Dim lastRow As Long
    Dim r As Long
    Dim c As Long
    Dim rowRange As Range
    Dim isEmpty As Boolean
    Dim checkRange As Range
    
    Set ws = Me
    
' Отслеживаем изменения в диапазоне B3:N последней строки
Set checkRange = Intersect(Target, ws.Range("B3:N" & ws.Rows.Count)) If checkRange Is Nothing Then Exit Sub

Application.EnableEvents = False
Application.ScreenUpdating = False

' Находим последнюю заполненную строку по столбцу B
lastRow = ws.Cells(ws.Rows.Count, "B").End(xlUp).Row
If lastRow < 3 Then lastRow = 3

For r = 3 To lastRow
    Set rowRange = ws.Range("B" & r & ":N" & r)
    
    isEmpty = True
    ' Проверяем все ячейки строки в диапазоне B:N
    For c = 2 To 14 ' B=2, N=14
        If Trim(ws.Cells(r, c).Value) <> "" Then
            isEmpty = False
            Exit For
        End If
    Next c
    
    If isEmpty Then
        rowRange.Borders.LineStyle = xlNone
    Else
        With rowRange.Borders
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = 1 ' черные границы
        End With
    End If
Next r

Application.EnableEvents = True
Application.ScreenUpdating = True
End Sub




////////

Private Sub Worksheet_Change(ByVal Target As Range)
    Dim checkRange As Range
    Dim col As Long, lastRow As Long
    Dim rowNum As Long
    Dim valDate As Variant
    
    ' Определяем последнюю заполненную строку в столбце B
    lastRow = Me.Cells(Me.Rows.Count, "B").End(xlUp).Row
    If lastRow < 2 Then lastRow = 2 ' начинаем со второй строки
    
    ' Диапазон для отслеживания изменений
    Set checkRange = Me.Range("B2:L" & lastRow)
    
    If Not Intersect(Target, checkRange) Is Nothing Then
        Application.EnableEvents = False
        
        ' Форматируем столбцы B, C и J как "dd/mm/yyyy hh:mm"
        For rowNum = 2 To lastRow
            Me.Cells(rowNum, "B").NumberFormat = "dd/mm/yyyy hh:mm"
            Me.Cells(rowNum, "C").NumberFormat = "dd/mm/yyyy hh:mm"
            Me.Cells(rowNum, "J").NumberFormat = "dd/mm/yyyy hh:mm"
        Next rowNum
        
        ' Выровнять весь текст по левому краю
        Me.Range("B2:L" & lastRow).HorizontalAlignment = xlLeft
        Me.Range("B2:L" & lastRow).VerticalAlignment = xlCenter
        
        ' Проверка дат в столбце B (со 2 строки)
        For rowNum = 2 To lastRow
            valDate = Me.Cells(rowNum, "B").Value
            If IsDate(valDate) Then
                If CDate(valDate) < (Date - 1) Then ' раньше чем вчера
                    Me.Range("B" & rowNum & ":L" & rowNum).Font.Color = vbRed
                Else
                    Me.Range("B" & rowNum & ":L" & rowNum).Font.Color = vbBlack
                End If
            Else
                Me.Range("B" & rowNum & ":L" & rowNum).Font.Color = vbBlack
            End If
        Next rowNum
        
        ' Сортировка по столбцу B от А до Я (по возрастанию даты)
        With Me.Sort
            .SortFields.Clear
            .SortFields.Add Key:=Me.Range("B2:B" & lastRow), _
                SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
            .SetRange Me.Range("B2:L" & lastRow)
            .Header = xlNo
            .MatchCase = False
            .Orientation = xlTopToBottom
            .Apply
        End With
        
        Application.EnableEvents = True
    End If
End Sub



/////

Private Sub Worksheet_Change(ByVal Target As Range)
    Dim checkRange As Range
    Dim col As Long, lastRow As Long
    Dim rowNum As Long
    Dim valDate As Variant
    
    ' Определяем последнюю заполненную строку по всем столбцам B:L
    lastRow = 2
    Dim tempLast As Long
    For col = 2 To 12 ' B=2, L=12
        tempLast = Me.Cells(Me.Rows.Count, col).End(xlUp).Row
        If tempLast > lastRow Then lastRow = tempLast
    Next col
    
    ' Диапазон для отслеживания изменений
    Set checkRange = Me.Range("B2:L" & lastRow)
    
    If Not Intersect(Target, checkRange) Is Nothing Then
        Application.EnableEvents = False
        
        ' ------------------- ДОБАВЛЕНО -------------------
        ' Вызов метода очистки/подтягивания строк
        ' Требуется, чтобы процедура CleanAndPullUp была в отдельном модуле
        Call CleanAndPullUp(Me, checkRange)
        ' --------------------------------------------------
        
        ' Форматируем столбцы B, C и J как "dd/mm/yyyy hh:mm"
        For rowNum = 2 To lastRow
            Me.Cells(rowNum, "B").NumberFormat = "dd/mm/yyyy hh:mm"
            Me.Cells(rowNum, "C").NumberFormat = "dd/mm/yyyy hh:mm"
            Me.Cells(rowNum, "J").NumberFormat = "dd/mm/yyyy hh:mm"
        Next rowNum
        
        ' Выровнять весь текст по левому краю
        Me.Range("B2:L" & lastRow).HorizontalAlignment = xlLeft
        Me.Range("B2:L" & lastRow).VerticalAlignment = xlCenter
        
        ' Проверка дат в столбце B (со 2 строки)
        For rowNum = 2 To lastRow
            valDate = Me.Cells(rowNum, "B").Value
            If IsDate(valDate) Then
                If CDate(valDate) < (Date - 1) Then ' раньше чем вчера
                    Me.Range("B" & rowNum & ":L" & rowNum).Font.Color = vbRed
                Else
                    Me.Range("B" & rowNum & ":L" & rowNum).Font.Color = vbBlack
                End If
            Else
                Me.Range("B" & rowNum & ":L" & rowNum).Font.Color = vbBlack
            End If
        Next rowNum
        
        ' Сортировка по столбцу B от А до Я (по возрастанию даты)
        With Me.Sort
            .SortFields.Clear
            .SortFields.Add Key:=Me.Range("B2:B" & lastRow), _
                SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
            .SetRange Me.Range("B2:L" & lastRow)
            .Header = xlNo
            .MatchCase = False
            .Orientation = xlTopToBottom
            .Apply
        End With
        
        Application.EnableEvents = True
    End If
End Sub



